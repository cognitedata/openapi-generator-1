{{#models}}{{#model}}
{{^isEnum}}
#include "Json.h"
#include "JsonUtilities.h"

#include "{{classFilename}}.h"


void {{classname}}::SerializeToJson(TSharedPtr<FJsonObject>& OutJsonObject) const
{
	Super::SerializeToJson(OutJsonObject)

	{{#vars}}
	SetField(OutJsonObject, TEXT("{{name}}"), {{name}});
	{{/vars}}
}

bool {{classname}}::InitFromJson(const TSharedPtr<FJsonObject>& JsonObject)
{
	const bool bSuccess = true && Super::InitFromJson(JsonObject)
	{{#vars}}{{#required}}
		{{^isEnum}}
		&& TryGetField(JsonObject, TEXT("{{name}}"), {{name}})
			{{/isEnum}}
			{{#isEnum}}
		&& TRY_GET_JSON_ENUM_FIELD({{dataType}}, JsonObject, TEXT("{{name}}"), {{name}})
			{{/isEnum}}
	{{/required}}{{/vars}}
		;
	
	if (!bSuccess)
		return false;

	{{#vars}}{{^required}}
		{{^isEnum}}
	TryGetOptionalField(JsonObject, TEXT("{{name}}"), {{name}});
		{{/isEnum}}
		{{#isEnum}}
	TRY_GET_JSON_ENUM_FIELD({{dataType}}, JsonObject, TEXT("{{name}}"), {{name}})
		{{/isEnum}}
	{{/required}}{{/vars}}

	return true;
}

{{/isEnum}}
{{/model}}
{{/models}}
